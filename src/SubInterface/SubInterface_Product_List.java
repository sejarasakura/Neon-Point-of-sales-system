package SubInterface;


import Main.Main;
import Product.Product;


import com.sun.glass.events.KeyEvent;
import java.awt.Font;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ITSUKA KOTORI
 */
public class SubInterface_Product_List extends javax.swing.JFrame {

    private JTable productTable;
    private final Object[] columns = {"ID", "Product Name", "Stock Remain", "Category", "Price", "Promotion"};
    private  String[] rows = new String[8];
    private DefaultTableModel model = new DefaultTableModel();
    private String selected_id = null;
    private int quantity = 1;

    public int getQuantity() {
        return quantity;
    }

    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    public String getSelected_id() {
        return selected_id;
    }

    public void setSelected_id(String selected_id) {
        this.selected_id = selected_id;
    }

    /**
     * Creates new form Product_List
     */
    public SubInterface_Product_List() {
        initComponents();
        initComponents_Interface();
        initComponents_Table();
        initComponents_data();
    }
    
    public void refresh(){
        this.quantity = 1;
        this.quantity_input.setText("1");
        this.productTable.clearSelection();
        this.selected_id = null;
    }
    
    public void refresh_table(){
        while(this.model.getRowCount() > 0){
            this.model.removeRow(0);
        }
        initComponents_data();
    }
    
    private void initComponents_Table() {
        productTable = new JTable(){ @Override public boolean isCellEditable(int rowIndex, int colIndex){ return false; /* disable edit */}};
        this.tablePanel.add(productTable);
        model = new DefaultTableModel(0,6);
        model.setColumnIdentifiers(columns);
        productTable.setModel(model);
        tablePanel.setViewportView(productTable);

        Font font = new Font("", 0, 12);
        productTable.setFont(font);
        productTable.setRowHeight(20);
        productTable.getColumnModel().getColumn(0).setPreferredWidth(70);
        productTable.getColumnModel().getColumn(1).setPreferredWidth(300);
        productTable.getColumnModel().getColumn(2).setPreferredWidth(90);
        productTable.getColumnModel().getColumn(3).setPreferredWidth(140);
        productTable.getColumnModel().getColumn(4).setPreferredWidth(100);
        productTable.getColumnModel().getColumn(5).setPreferredWidth(100);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tablePanel = new javax.swing.JScrollPane();
        add_product_button = new javax.swing.JButton();
        cancle_button = new javax.swing.JButton();
        quantity_input = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        add_product_button.setText("add");
        add_product_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_product_buttonActionPerformed(evt);
            }
        });

        cancle_button.setText("cancel");
        cancle_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancle_buttonActionPerformed(evt);
            }
        });

        quantity_input.setText("1");
        quantity_input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantity_inputActionPerformed(evt);
            }
        });
        quantity_input.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quantity_inputKeyReleased(evt);
            }
        });

        jLabel1.setText("Quantity");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tablePanel)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cancle_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 527, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(quantity_input, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(add_product_button)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_product_button)
                    .addComponent(cancle_button)
                    .addComponent(quantity_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void quantity_inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantity_inputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantity_inputActionPerformed

    private void add_product_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_product_buttonActionPerformed
        // TODO add your handling code here
        int i = productTable.getSelectedRow();
        quantity = Integer.valueOf(this.quantity_input.getText());
        if(i >= 0 && Integer.valueOf(model.getValueAt(i, 2).toString().replace(' ', '0')) >= quantity){
            selected_id = new Product((String)model.getValueAt(i, 0).toString().substring(1, 7)).getProduct_id();
            this.setVisible(false);
        }else{
            quantity = 0;
            JOptionPane.showMessageDialog(null, "Error message: Non product selected or the selected product is out of stock .Please click to the table and select the product before add. ");
        }
    }//GEN-LAST:event_add_product_buttonActionPerformed

    private void cancle_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancle_buttonActionPerformed
        // TODO add your handling code here:
        selected_id = null;
        quantity = 0;
        this.setVisible(false);
    }//GEN-LAST:event_cancle_buttonActionPerformed

    private void quantity_inputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantity_inputKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            add_product_buttonActionPerformed(null);
        }
    }//GEN-LAST:event_quantity_inputKeyReleased

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_product_button;
    private javax.swing.JButton cancle_button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField quantity_input;
    private javax.swing.JScrollPane tablePanel;
    // End of variables declaration//GEN-END:variables

    private void initComponents_data() {
         try
        {
            Product temp = new Product();            
            try (Connection conn = DriverManager.getConnection("jdbc:ucanaccess://resource/data/Point_of_sales.mdb;"); Statement s = conn.createStatement()) {
                ResultSet x = s.executeQuery("SELECT * FROM Product;");
                while(x.next()){
                    temp.split(x);
                    write_table_row(temp);
                }
                conn.close();
                s.close();
            }
        }
        catch(SQLException ex)
        {
            System.out.println(ex.getMessage());
        }
    }

    private void initComponents_Interface() {
        setTitle("Catelog item list");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setIconImage(Main.DEFUALT_ICON.getImage());
    }

    private void write_table_row(Product product) {
        rows[0] = " " + product.getProduct_id();
        rows[1] = " " + product.getProduct_name();
        rows[2] = String.format(" %d", product.getQuantity());
        rows[3] = " " + product.getType().toString();
        rows[4] = String.format(" RM %8.2f", product.getRetial_price());
        rows[5] = String.format(" %8.2f %%", product.getCheckPromotion());
        model.addRow(rows);
    }
    
}
